AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ServiceName:
    Type: String
    Default: Image-Builder
    Description: Name for this service; used in the code repository and pipeline names

  LaunchTemplateId:
    Type: String
    Description: Launch Template ID for the existing AutoScaling Group.
    AllowedPattern: "^lt-[a-z0-9-_]{17}$"

  ImageBuilderTemplateFileName:
    Type: String
    Default: ib_builder.yaml
    Description: Name for the Parameter Store, Parameter used in the code to store the AMI ID

Resources:
##########
# Source #
##########
# Code repository for AMI Builder
  CodeRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub '${ServiceName}_Repo'
      RepositoryDescription: !Sub 'Repository for ${ServiceName} service'

#############
# Artifacts #
#############
# S3 Bucket that CodePipeline/CodeDeploy service will use
# It will receive SourceZip (CodeCommit Git HEAD)
  SourceArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

# CodePipeline
#############
# Pipeline  #
#############
  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'CodePipeline-Role'
      Path: '/service-role/'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
      Policies:
      - PolicyName: CodePipelineRoleAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - iam:PassRole
            Resource: "*"
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                - cloudformation.amazonaws.com
                - ec2.amazonaws.com
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplication
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:*
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:DescribeStacks
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            Resource: "*"
            Effect: Allow

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'CloudFormation-Role'
      Path: '/'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Policies:
      - PolicyName: CFNDeploymentAccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - ssm:PutParameter
            - ssm:DeleteParameter
            - ssm:AddTagsToResource
            - s3:CreateBucket
            - s3:DeleteBucket
            - imagebuilder:*
            - iam:CreateInstanceProfile
            - iam:TagRole
            - iam:CreateRole
            - iam:AttachRolePolicy
            - iam:PutRolePolicy
            - iam:AddRoleToInstanceProfile
            - iam:PassRole
            - iam:GetRolePolicy
            - iam:DetachRolePolicy
            - iam:CreateServiceLinkedRole
            - iam:DeleteRolePolicy
            - iam:RemoveRoleFromInstanceProfile
            - iam:DeleteRole
            - iam:DeleteInstanceProfile
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DeleteLogGroup
            - logs:DescribeLogGroups
            - logs:PutLogEvents
            - logs:PutRetentionPolicy
            - ec2:RunInstances
            - ec2:TerminateInstances
            - ec2:DescribeInstances
            - ec2:DescribeAccountAttributes
            - ec2:GetLaunchTemplateData
            - ec2:DescribeLaunchTemplates
            - ec2:CreateLaunchTemplate
            - ec2:CreateLaunchTemplateVersion
            - ec2:ModifyLaunchTemplate
            Resource: "*"
            Effect: Allow

  codepipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ServiceName}-Pipeline
      RoleArn: !GetAtt PipelineExecutionRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref SourceArtifactsBucket
      Stages: 
        - Name: Source
          Actions:
            - Name: CodeCommitRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Sub '${ServiceName}_Repo'
                BranchName: main
              OutputArtifacts:
              - Name: SourceZip
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployInfrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM,CAPABILITY_IAM
                StackName: !Sub '${ServiceName}-Stack'
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                TemplatePath: !Sub 'SourceZip::${ImageBuilderTemplateFileName}'
                ParameterOverrides: !Sub '{"EC2LaunchTemplateId": "${LaunchTemplateId}"}'
                OutputFileName: 'cfnoutput.json'
              OutputArtifacts:
              - Name: OutCFNZip
              InputArtifacts:
              - Name: SourceZip
              RunOrder: 2
      RestartExecutionOnUpdate: true